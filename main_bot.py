import telebot
from flask import Flask, request
import os
import messages
import emoji
from datetime import datetime

app = Flask(__name__)
TOKEN = os.environ.get('TOKEN')
MY_ID = os.environ.get('MY_ID')
time_now = datetime.now()
bot = telebot.TeleBot(TOKEN, parse_mode='HTML')  # paste token using os
user_answers = {}


@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(message.chat.id, messages.mes.get('GREETINGS'))
    sti_1 = open('pictures/mot_convince.webp', 'rb')
    bot.send_message(message.chat.id, '<u><b>–ù–∞—à–µ —Ç–µ–ª–æ –º–æ–∂–µ—Ç –≤—Å—ë,\n—Ç–æ–ª—å–∫–æ –ø–æ–≤–µ—Ä—å –≤ —ç—Ç–æ</b></u> üßò‚Äç')
    bot.send_sticker(message.chat.id, sti_1)
    bot.send_message(message.chat.id, messages.mes.get('FIO'))
    bot.register_next_step_handler(message, fio_step)

def fio_step(message):
    user_answers['–î–∞—Ç–∞'] = time_now.strftime('%Y-%m-%d')
    user_answers['–ò–º—è'] = message.text
    bot.send_message(message.chat.id, '<u><b>–ë—É–¥—å —Ç–æ–π —ç–Ω–µ—Ä–≥–∏–µ–π, –∫–æ—Ç–æ—Ä—É—é —Ç—ã —Ö–æ—á–µ—à—å –ø—Ä–∏–≤–ª–µ–∫–∞—Ç—å –≤ —Å–≤–æ—é –∂–∏–∑–Ω—å</b></u>')
    sti_2 = open('pictures/mot_energy.webp', 'rb')
    bot.send_sticker(message.chat.id, sti_2)
    bot.send_message(message.chat.id, messages.mes.get('PHONE'))
    bot.register_next_step_handler(message, phone_step)

def phone_step(message):
    user_answers['–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞'] = message.text
    bot.send_message(message.chat.id, '<u><b>–ü–æ–º–Ω–∏, –ø–æ—á–µ–º—É —Ç—ã –Ω–∞—á–∞–ª–∞</b></u>')
    sti_3 = open('pictures/mot_rememeber.webp', 'rb')
    bot.send_sticker(message.chat.id, sti_3)
    bot.send_message(message.chat.id, messages.mes.get('GMAIL'))
    bot.register_next_step_handler(message, gmail_step)

def gmail_step(message):
    user_answers['–ü–æ—á—Ç–∞'] = message.text
    bot.send_message(message.chat.id, '<u><b>–ú–µ—á—Ç—ã –Ω–µ –Ω–∞—á–Ω—É—Ç –æ—Å—É—â–µ—Å—Ç–≤–ª—è—Ç—å—Å—è, –ø–æ–∫–∞ —Ç—ã –Ω–µ –Ω–∞—á–Ω–µ—à—å –Ω–∞–¥ –Ω–∏–º–∏ '
                                      '—Ä–∞–±–æ—Ç–∞—Ç—å</b></u>')
    sti_4 = open('pictures/mot_work_dreams.webp', 'rb')
    bot.send_sticker(message.chat.id, sti_4)
    bot.send_message(message.chat.id, messages.mes.get('WEIGHT'))
    bot.register_next_step_handler(message, weight_step)

def weight_step(message):
    user_answers['–í–µ—Å'] = message.text
    bot.send_message(message.chat.id, '<u><b>–ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è –Ω–∏–∂–µ, –∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã –≤—ã—à–µ</b></u>')
    sti_4 = open('pictures/mot_squats_low.webp', 'rb')
    bot.send_sticker(message.chat.id, sti_4)
    bot.send_message(message.chat.id, messages.mes.get('WAIST'))
    bot.register_next_step_handler(message, waist_step)

def waist_step(message):
    user_answers['–¢–∞–ª–∏—è'] = message.text
    bot.send_message(message.chat.id, '<u><b>–ö–∞–∂–¥–æ–µ —É—Ç—Ä–æ - —ç—Ç–æ –Ω–æ–≤–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å, —á—Ç–æ –±—ã —Å–¥–µ–ª–∞—Ç—å —Å–µ–±—è –ª—É—á—à–µ</b></u>')
    sti_5 = open('pictures/mot_new_life.webp', 'rb')
    bot.send_sticker(message.chat.id, sti_5)
    bot.send_message(message.chat.id, messages.mes.get('BELLY'))
    bot.register_next_step_handler(message, belly_step)

def belly_step(message):
    user_answers['–ñ–∏–≤–æ—Ç'] = message.text
    bot.send_message(message.chat.id, '<u><b>–†–µ–∑—É–ª—å—Ç–∞—Ç –û–ª–µ—Å–∏, –æ–Ω–ª–∞–π–Ω –ø–æ–¥–æ–ø–µ—á–Ω–æ–π –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞. –£ –≤—Å–µ—Ö –≤—Å—ë –ø–æ–ª—É—á–∞–µ—Ç—Å—è,'
                                      ' –≥–ª–∞–≤–Ω–æ–µ —Å–ª–µ–¥—É–π—Ç–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º —Ç—Ä–µ–Ω–µ—Ä–∞üòâ</b></u>')
    sti_6 = open('pictures/mot_lesya.webp', 'rb')
    bot.send_sticker(message.chat.id, sti_6)
    bot.send_message(message.chat.id, messages.mes.get('UNDERBELLY'))
    bot.register_next_step_handler(message, underbelly_step)

def underbelly_step(message):
    user_answers['–ù–∏–∑ –∂–∏–≤–æ—Ç–∞'] = message.text
    bot.send_message(message.chat.id, '<u><b>–†–µ–∑—É–ª—å—Ç–∞—Ç –°–≤–µ—Ç–ª–∞–Ω—ã, –æ–Ω–ª–∞–π–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ + –ø–∏—Ç–∞–Ω–∏–µ</b></u>')
    sti_7 = open('pictures/mot_sveta.webp', 'rb')
    bot.send_sticker(message.chat.id, sti_7)
    bot.send_message(message.chat.id, messages.mes.get('HIPS'))
    bot.register_next_step_handler(message, hips_step)

def hips_step(message):
    user_answers['–ë—ë–¥—Ä–∞'] = message.text
    bot.send_message(message.chat.id, '<u><b>–ú–æ—Ç–∏–≤–∞—Ü–∏—è –ø–æ–º–æ–≥–∞–µ—Ç –Ω–∞—á–∞—Ç—å, –ø—Ä–∏–≤—ã—á–∫–∞ –ø–æ–º–æ–≥–∞–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å</b></u>')
    sti_8 = open('pictures/mot_habits.webp', 'rb')
    bot.send_sticker(message.chat.id, sti_8)
    bot.send_message(message.chat.id, messages.mes.get('HEALTH'))
    bot.register_next_step_handler(message, health_step)

def health_step(message):
    user_answers['–ó–¥–æ—Ä–æ–≤—å–µ'] = message.text
    bot.send_message(message.chat.id, '<u><b>–ê –Ω–∞–∫–∞—á–µ–Ω–Ω–∞—è –ø–æ–ø–∞ –º–æ–∂–µ—Ç –∏ —Ä–µ—à–∏—Ç –ø—Ä–æ–±–ª–µ–º—Éüòú</b></u>')
    sti_9 = open('pictures/mot_2.webp', 'rb')
    bot.send_sticker(message.chat.id, sti_9)
    bot.send_message(message.chat.id, messages.mes.get('PLACE_OF_TRAININGS'))
    bot.register_next_step_handler(message, place_of_trainings_step)

def place_of_trainings_step(message):
    user_answers['–ú–µ—Å—Ç–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫'] = message.text
    bot.send_message(message.chat.id, '<u><b>–í—Å–µ –ø–æ–±–µ–¥—ã –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å –ø–æ–±–µ–¥ –Ω–∞–¥ —Å–æ–±–æ–π</b></u>')
    sti_10 = open('pictures/motivation.webp', 'rb')
    bot.send_sticker(message.chat.id, sti_10)
    bot.send_message(message.chat.id, messages.mes.get('NOW_MANY_TRAININGS'))
    bot.register_next_step_handler(message, how_many_trainings_step)

def how_many_trainings_step(message):
    user_answers['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫'] = message.text
    bot.send_message(message.chat.id, '<u><b>–ò –±–æ–∫–∞ —É–±–µ—Ä—ë–º, –∏ –∂–∏–≤–æ—Ç —É–±–µ—Ä—ë–º, –≤—Å—ë –ø–æ–ª—É—á–∏—Ç—Å—è.</b></u>')
    sti_11 = open('pictures/mot.webp', 'rb')
    bot.send_sticker(message.chat.id, sti_11)
    bot.send_message(message.chat.id, messages.mes.get('DURATION_TRAINING'))
    bot.register_next_step_handler(message, duration_trainings_step)

def duration_trainings_step(message):
    user_answers['–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏'] = message.text
    bot.send_message(message.chat.id, '<u><b>–ù–µ–º–Ω–æ–≥–æ —é–º–æ—Ä–∞üòÅ</b></u>')
    sti_12 = open('pictures/eat_joke_1.webp', 'rb')
    bot.send_sticker(message.chat.id, sti_12)
    bot.send_message(message.chat.id, messages.mes.get('TIME_FOOD_INTAKE'))
    bot.register_next_step_handler(message, times_food_intake_step)

def times_food_intake_step(message):
    user_answers['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏—ë–º–æ–≤ –ø–∏—â–∏ —Å–µ–π—á–∞—Å'] = message.text
    bot.send_message(message.chat.id, '<u><b>–ü–∏—Ç–∞–Ω–∏–µ –±—É–¥–µ—Ç –≤–∫—É—Å–Ω–æ–µ –∏ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–µ</b></u>')
    sti_13 = open('pictures/food.webp', 'rb')
    bot.send_sticker(message.chat.id, sti_13)
    bot.send_message(message.chat.id, messages.mes.get('FAVORITE_FOOD'))
    bot.register_next_step_handler(message, favorite_food_step)

def favorite_food_step(message):
    user_answers['–õ—é–±–∏–º–∞—è –µ–¥–∞'] = message.text
    bot.send_message(message.chat.id, '<u><b>–ù–µ–º–Ω–æ–≥–æ –ø—Ä–∏–º–µ—Ä–æ–≤ –ø–æ –µ–¥–µ</b></u>')
    sti_14 = open('pictures/food2.weebp', 'rb')
    bot.send_sticker(message.chat.id, sti_14)
    bot.send_message(message.chat.id, messages.mes.get('GOALS'))
    bot.register_next_step_handler(message, goals_step)

def goals_step(message):
    user_answers['–¶–µ–ª–∏'] = message.text
    bot.send_message(message.chat.id, '<u><b>–ï—Å–ª–∏ –∂–µ–ª–∞–Ω–∏–µ –ø–æ–¥–∫—Ä–µ–ø–ª–µ–Ω–æ –¥–µ–π—Å—Ç–≤–∏—è–º–∏, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤—Å—ë –ø–æ–ª—É—á–∏—Ç—Å—è </b></u>')
    sti_14 = open('pictures/do.webp', 'rb')
    bot.send_sticker(message.chat.id, sti_14)
    bot.send_message(message.chat.id, messages.mes.get('QUESTIONS'))
    bot.register_next_step_handler(message, final_step)

@bot.message_handler(type=['text'])
def final_step(message):
    user_answers['–í–æ–ø—Ä–æ—Å—ã'] = message.text
    name_user = message.from_user.username
    if name_user is None:
        name_user = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —É–∫–∞–∑—ã–≤–∞–ª —Å–≤–æ—ë –∏–º—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º'
    user_answers['–ò–º—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º'] = str(name_user)
    bot.send_message(message.chat.id, messages.mes.get('READ'))
    file = open('necessary_info_for_client/–ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ_–º–µ–Ω—è.txt', 'rb')
    bot.send_document(message.chat.id, file)
    file2 = open('necessary_info_for_client/–ò_–º–µ–Ω—è_–ø—Ä–æ—á—Ç–∏_–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ.txt', 'rb')
    bot.send_document(message.chat.id, file2)
    file3 = open('necessary_info_for_client/–ü–æ–ª–µ–∑–Ω–∞—è_–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.txt', 'rb')
    bot.send_document(message.chat.id, file3)
    bot.send_message(message.chat.id, messages.mes.get('FINAL'))
    with open('users_excel_info.csv', 'w') as f:
        f.write(user_answers.get('–î–∞—Ç–∞') + '\n')
        f.write(list(user_answers.keys())[1] + ',' + user_answers.get('–ò–º—è') + '\n')
        f.write(list(user_answers.keys())[2] + ',' + user_answers.get('–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞') + '\n')
        f.write(list(user_answers.keys())[3] + ',' + user_answers.get('–ü–æ—á—Ç–∞') + '\n')
        f.write(list(user_answers.keys())[4] + ',' + user_answers.get('–í–µ—Å') + '\n')
        f.write(list(user_answers.keys())[5] + ',' + user_answers.get('–¢–∞–ª–∏—è') + '\n')
        f.write(list(user_answers.keys())[6] + ',' + user_answers.get('–ñ–∏–≤–æ—Ç') + '\n')
        f.write(list(user_answers.keys())[7] + ',' + user_answers.get('–ù–∏–∑ –∂–∏–≤–æ—Ç–∞') + '\n')
        f.write(list(user_answers.keys())[8] + ',' + user_answers.get('–ë—ë–¥—Ä–∞') + '\n')
        f.write(list(user_answers.keys())[9] + ',' + user_answers.get('–ó–¥–æ—Ä–æ–≤—å–µ') + '\n')
        f.write(list(user_answers.keys())[10] + ',' + user_answers.get('–ú–µ—Å—Ç–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫') + '\n')
        f.write(list(user_answers.keys())[11] + ',' + user_answers.get('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫') + '\n')
        f.write(list(user_answers.keys())[12] + ',' + user_answers.get('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏') + '\n')
        f.write(list(user_answers.keys())[13] + ',' + user_answers.get('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏—ë–º–æ–≤ –ø–∏—â–∏ —Å–µ–π—á–∞—Å') + '\n')
        f.write(list(user_answers.keys())[14] + ',' + user_answers.get('–õ—é–±–∏–º–∞—è –µ–¥–∞') + '\n')
        f.write(list(user_answers.keys())[15] + ',' + user_answers.get('–¶–µ–ª–∏') + '\n')
        f.write(list(user_answers.keys())[16] + ',' + user_answers.get('–í–æ–ø—Ä–æ—Å—ã') + '\n')
        f.write(list(user_answers.keys())[17] + ',' + user_answers.get('–ò–º—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º') + '\n')
    bot.send_message(MY_ID, f'{list(user_answers.keys())[0]} => {user_answers.get("–î–∞—Ç–∞")}\n'
                            f'{list(user_answers.keys())[1]} => {user_answers.get("–ò–º—è")}\n'
                            f'{list(user_answers.keys())[2]} => {user_answers.get("–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞")}\n'
                            f'{list(user_answers.keys())[3]} => {user_answers.get("–ü–æ—á—Ç–∞")}\n'
                            f'{list(user_answers.keys())[4]} => {user_answers.get("–í–µ—Å")}\n'
                            f'{list(user_answers.keys())[5]} => {user_answers.get("–¢–∞–ª–∏—è")}\n'
                            f'{list(user_answers.keys())[6]} => {user_answers.get("–ñ–∏–≤–æ—Ç")}\n'
                            f'{list(user_answers.keys())[7]} => {user_answers.get("–ù–∏–∑ –∂–∏–≤–æ—Ç–∞")}\n'
                            f'{list(user_answers.keys())[8]} => {user_answers.get("–ë—ë–¥—Ä–∞")}\n'
                            f'{list(user_answers.keys())[9]} => {user_answers.get("–ó–¥–æ—Ä–æ–≤—å–µ")}\n'
                            f'{list(user_answers.keys())[10]} => {user_answers.get("–ú–µ—Å—Ç–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫")}\n'
                            f'{list(user_answers.keys())[11]} => {user_answers.get("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫")}\n'
                            f'{list(user_answers.keys())[12]} => {user_answers.get("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏")}\n'
                            f'{list(user_answers.keys())[13]} => {user_answers.get("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏—ë–º–æ–≤ –ø–∏—â–∏ —Å–µ–π—á–∞—Å")}\n'
                            f'{list(user_answers.keys())[14]} => {user_answers.get("–õ—é–±–∏–º–∞—è –µ–¥–∞")}\n'
                            f'{list(user_answers.keys())[15]} => {user_answers.get("–¶–µ–ª–∏")}\n'
                            f'{list(user_answers.keys())[16]} => {user_answers.get("–í–æ–ø—Ä–æ—Å—ã")}\n'
                            f'{list(user_answers.keys())[17]} => {user_answers.get("–ò–º—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º")}\n')
    print(user_answers.items())


@app.route('/' + TOKEN, methods=['POST'])
def get_message():
    bot.process_new_updates([telebot.types.Update.de_json(request.stream.read().decode("utf-8"))])
    return "Python Telegram Bot", 200


@app.route('/')
def main():
    bot.remove_webhook()
    bot.set_webhook(url='https://telega2bot.herokuapp.com/' + TOKEN)
    return 'Python Telegram Bot', 200


if __name__ == '__main__':
    app.run(host='0.0.0.0', port=int(os.environ.get('PORT', 5000)))